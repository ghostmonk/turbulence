name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Install Google Cloud CLI with beta components
      - name: Install Google Cloud CLI
        run: |
          echo "Installing Google Cloud CLI..."
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli

      # Build and deploy the backend
      - name: Deploy Backend
        run: |
          gcloud builds submit ./backend --tag gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-service
          
          # Encode the JSON to base64 to avoid parsing issues
          GCP_CREDS_B64=$(echo '${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}' | base64 -w 0)
          
          gcloud run deploy turbulent-service \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-service \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --service-account=${{ vars.GCP_SERVICE_ACCOUNT_NAME }} \
            --set-env-vars "MONGO_USER=${{ secrets.MONGO_USER }},MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }},MONGO_CLUSTER=${{ vars.MONGO_CLUSTER }},MONGO_APP_NAME=${{ vars.MONGO_APP_NAME }},MONGO_HOST=${{ vars.MONGO_HOST }},GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }},MONGO_DB_NAME=${{ vars.MONGO_DB_NAME }},GCS_BUCKET_NAME=${{ vars.GCS_BUCKET_NAME }}" \
            --set-env-vars "GOOGLE_APPLICATION_CREDENTIALS_JSON_B64=${GCP_CREDS_B64}" \
            --timeout=600s

      # Build and deploy the frontend
      - name: Deploy Frontend
        run: |
          gcloud builds submit ./frontend --tag gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-frontend
          gcloud run deploy turbulent-frontend \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-frontend \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }},NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }},NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }},NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }},NEXTAUTH_DEBUG=${{ vars.NEXTAUTH_DEBUG }},UNSAFE_EVAL=${{ vars.UNSAFE_EVAL }} \
            --timeout=600s

      # Grant public access to the frontend service
      - name: Make Frontend Public
        run: |
          gcloud run services add-iam-policy-binding turbulent-frontend \
            --region us-central1 \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --quiet

      # Deploy containerized Cloud Function for video processing
      - name: Deploy Video Processing Function
        run: |
          echo "Deploying containerized video processing Cloud Function..."
          
          # Build MongoDB URI from secrets/vars
          MONGODB_URI="mongodb+srv://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASSWORD }}@${{ vars.MONGO_HOST }}/${{ vars.MONGO_DB_NAME }}?retryWrites=true&w=majority&appName=${{ vars.MONGO_APP_NAME }}"
          
          # Deploy the Cloud Function from Dockerfile
          gcloud functions deploy video-processor \
            --gen2 \
            --region=us-central1 \
            --source=./cloud-functions/video-processor \
            --entry-point=process_video \
            --trigger-event-filters="type=google.cloud.storage.object.v1.finalized" \
            --trigger-event-filters="bucket=${{ vars.GCS_BUCKET_NAME }}" \
            --set-env-vars="GCS_BUCKET_NAME=${{ vars.GCS_BUCKET_NAME }},MONGODB_URI=${MONGODB_URI},API_BASE_URL=${{ vars.NEXT_PUBLIC_API_URL }}" \
            --memory=2GiB \
            --timeout=540s \
            --max-instances=5 \
            --cpu=1 \
            --service-account="${{ vars.GCP_SERVICE_ACCOUNT_NAME }}"
