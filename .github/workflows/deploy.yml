name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Install pip-tools and dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
          cd backend
          pip install -r requirements-dev.txt

      # Run code formatting checks
      - name: Check code formatting
        run: |
          cd backend
          isort . --check-only
          black . --check

      # Run linting
      - name: Run linting
        run: |
          cd backend
          flake8 .

      # Run tests
      - name: Run tests
        run: |
          cd backend
          pytest -v --tb=short

  deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures deploy only runs if test passes

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Install Google Cloud CLI with beta components
      - name: Install Google Cloud CLI
        run: |
          echo "Installing Google Cloud CLI..."
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli

      # Build and deploy the backend
      - name: Deploy Backend
        run: |
          gcloud builds submit ./backend --tag gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-service
          gcloud run deploy turbulent-service \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-service \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --service-account=${{ vars.GCP_SERVICE_ACCOUNT_NAME }} \
            --set-env-vars MONGO_USER=${{ secrets.MONGO_USER }},MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }},MONGO_CLUSTER=${{ vars.MONGO_CLUSTER }},MONGO_APP_NAME=${{ vars.MONGO_APP_NAME }},MONGO_HOST=${{ vars.MONGO_HOST }},GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }},MONGO_DB_NAME=${{ vars.MONGO_DB_NAME }},GCS_BUCKET_NAME=${{ vars.GCS_BUCKET_NAME }} \
            --timeout=600s

      # Build and deploy the frontend
      - name: Deploy Frontend
        run: |
          gcloud builds submit ./frontend --tag gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-frontend
          gcloud run deploy turbulent-frontend \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/turbulent-frontend \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --set-env-vars GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }},NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }},NEXTAUTH_URL=${{ vars.NEXTAUTH_URL }},NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }},NEXTAUTH_DEBUG=${{ vars.NEXTAUTH_DEBUG }},UNSAFE_EVAL=${{ vars.UNSAFE_EVAL }} \
            --timeout=600s

      # Grant public access to the frontend service
      - name: Make Frontend Public
        run: |
          gcloud run services add-iam-policy-binding turbulent-frontend \
            --region us-central1 \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --quiet