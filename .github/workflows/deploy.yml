name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    strategy:
      matrix:
        service: [backend, frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug Changed Files
        run: |
          echo "Changed files:"
          git diff --name-only HEAD~1 HEAD

      - name: Deploy Service
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          if [[ "$CHANGED_FILES" == *"${{ matrix.service }}/"* ]]; then
            if [[ "${{ matrix.service }}" == "backend" ]]; then
              echo "Deploying backend..."
              gcloud builds submit ./backend --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/turbulent-backend
              gcloud run deploy flexible-backend \
                --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/turbulent-backend \
                --platform managed \
                --region us-central1 \
                --allow-unauthenticated \
                --set-env-vars MONGO_USER=${{ secrets.MONGO_USER }},MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }},MONGO_CLUSTER=${{ secrets.MONGO_CLUSTER }},MONGO_APP_NAME=${{ secrets.MONGO_APP_NAME }},MONGO_HOST=${{ secrets.MONGO_HOST }} \
                --timeout=600s
            elif [[ "${{ matrix.service }}" == "frontend" ]]; then
              echo "Deploying frontend..."
              gcloud builds submit ./frontend --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/turbulent-frontend
              gcloud run deploy flexible-frontend \
                --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/turbulent-frontend \
                --platform managed \
                --region us-central1 \
                --allow-unauthenticated \
                --timeout=600s
              gcloud run services add-iam-policy-binding flexible-frontend \
                --region us-central1 \
                --member="allUsers" \
                --role="roles/run.invoker" \
                --quiet
            fi
          else
            echo "No changes in ${{ matrix.service }}. Skipping deployment."
          fi
